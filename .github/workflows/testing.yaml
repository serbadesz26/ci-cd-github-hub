name: Workflow Unit Tests

on:
  push:
    branches:
      - staging

jobs:
  run-tests-app:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
          MYSQL_USER: ${{ secrets.DB_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h localhost" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: vendor
        key: composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          composer-

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, json, mysqli, pdo_mysql, bcmath, fileinfo
        coverage: none

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Set up .env file
      run: |
        cp .env.example .env
        php artisan key:generate
        php artisan config:cache

    # - name: Run database migrations
    #   env:
    #     DB_CONNECTION: mysql
    #     DB_HOST: ${{ secrets.DB_HOST }}
    #     DB_PORT: ${{ secrets.DB_PORT }}
    #     DB_DATABASE: ${{ secrets.DB_DATABASE }}
    #     DB_USERNAME: ${{ secrets.DB_USERNAME }}
    #     DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    #   run: php artisan migrate --seed --force

    - name: Run unit tests
      # env:
      #   DB_CONNECTION: mysql
      #   DB_HOST: ${{ secrets.DB_HOST }}
      #   DB_PORT: ${{ secrets.DB_PORT }}
      #   DB_DATABASE: ${{ secrets.DB_DATABASE }}
      #   DB_USERNAME: ${{ secrets.DB_USERNAME }}
      #   DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: php artisan test

  deploy-app-to-staging:
    runs-on: ubuntu-latest

    needs: run-tests-app

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        # extensions: mbstring, xml, ctype, json, mysqli, pdo_mysql, bcmath, fileinfo
        coverage: none 

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Set up .env file
      run: |
        cp .env.example .env
        php artisan key:generate
        php artisan config:cache

    - name: Deploy to staging serverr
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script_stop: true
        script: |
          cd /home/u329657931/domains/pantaulistrik.com/public_html/staging_pantau
          git pull origin staging




    
